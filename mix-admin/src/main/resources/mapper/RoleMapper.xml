<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.liangjq.mix.admin.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="cn.liangjq.mix.common.entity.Role">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_code" jdbcType="VARCHAR" property="roleCode"/>
        <result column="role_sort" jdbcType="INTEGER" property="roleSort"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , role_name, role_code, role_sort, status, is_delete, remark, gmt_create, gmt_modified
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insert" parameterType="cn.liangjq.mix.common.entity.Role" useGeneratedKeys="true" keyProperty="id">
        insert into t_role (id, role_name, role_code,
                            role_sort, status, is_delete,
                            remark, gmt_create, gmt_modified)
        values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR},
                #{roleSort,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{isDelete,jdbcType=TINYINT},
                #{remark,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="cn.liangjq.mix.common.entity.Role" useGeneratedKeys="true"
            keyProperty="id">
        insert into t_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleCode != null">
                role_code,
            </if>
            <if test="roleSort != null">
                role_sort,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null">
                #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="roleSort != null">
                #{roleSort,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.liangjq.mix.common.entity.Role">
        update t_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null">
                role_code = #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="roleSort != null">
                role_sort = #{roleSort,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.liangjq.mix.common.entity.Role">
        update t_role
        set role_name    = #{roleName,jdbcType=VARCHAR},
            role_code    = #{roleCode,jdbcType=VARCHAR},
            role_sort    = #{roleSort,jdbcType=INTEGER},
            status       = #{status,jdbcType=TINYINT},
            is_delete    = #{isDelete,jdbcType=TINYINT},
            remark       = #{remark,jdbcType=VARCHAR},
            gmt_create   = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getRoleListByUserId" resultMap="BaseResultMap">
        select role.*
        from t_user user,
             t_user_role ur,
             t_role role
        where user.id = ur.user_id
          and ur.role_id = role.id
          and user.id = #{userId}
    </select>

    <!--自定义-->
    <select id="countId" resultType="java.lang.Integer">
        SELECT count(distinct id)
        FROM
        t_role
        WHERE
        id IN
        <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
            #{roleId}
        </foreach>
    </select>

    <select id="selectByRoleSearchDTO" parameterType="cn.liangjq.mix.common.dto.role.RoleSearchDTO"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_role
        <trim prefix="where" prefixOverrides="and">
            <if test="roleName!=null">
                role_name LIKE CONCAT('%',#{roleName},'%')
            </if>
        </trim>
        order by role_sort
    </select>

    <select id="checkRoleExistByRoleNameAndRoleCode" resultType="java.lang.Boolean">
        select count(1)
        from t_role
        where role_name = #{roleName}
           OR role_code = #{roleCode}
    </select>

    <select id="checkRoleExistByIdAndCodeAndName" resultType="java.lang.Boolean">
        select count(1)
        from t_role
        where id != #{roleId}
          AND (
            role_name = #{roleName}
           OR role_code = #{roleCode})
    </select>

    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_role
    </select>

    <delete id="deleteById">
        delete
        from t_role
        where id =
              #{roleId}
    </delete>

</mapper>