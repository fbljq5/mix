<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.liangjq.mix.admin.dao.UserMapper">
    <resultMap id="BaseResultMap" type="cn.liangjq.mix.common.entity.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="login_date" jdbcType="TIMESTAMP" property="loginDate"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , username,nickname, email, phone, avatar, password, is_delete, status, login_date,
    remark, gmt_create, gmt_modified
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <update id="updateByPrimaryKeySelective" parameterType="cn.liangjq.mix.common.entity.User">
        update t_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                username = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="loginDate != null">
                login_date = #{loginDate,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.liangjq.mix.common.entity.User">
        update t_user
        set username     = #{username,jdbcType=VARCHAR},
            nickname     = #{nickname,jdbcType=VARCHAR},
            email        = #{email,jdbcType=VARCHAR},
            phone        = #{phone,jdbcType=VARCHAR},
            avatar       = #{avatar,jdbcType=VARCHAR},
            password     = #{password,jdbcType=VARCHAR},
            is_delete    = #{isDelete,jdbcType=TINYINT},
            status       = #{status,jdbcType=TINYINT},
            login_date   = #{loginDate,jdbcType=TIMESTAMP},
            remark       = #{remark,jdbcType=VARCHAR},
            gmt_create   = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--自定义-->
    <insert id="insert" parameterType="cn.liangjq.mix.common.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into t_user (id, username, nickname,
                            email, phone, avatar,
                            password, is_delete, status,
                            login_date, remark, gmt_create,
                            gmt_modified)
        values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR}, #{isDelete,jdbcType=TINYINT}, #{status,jdbcType=TINYINT},
                #{loginDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP},
                #{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="cn.liangjq.mix.common.entity.User" useGeneratedKeys="true"
            keyProperty="id">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="loginDate != null">
                login_date,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="loginDate != null">
                #{loginDate,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="findUserByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where username = #{username}
    </select>

    <select id="selectByUserRequest" parameterType="cn.liangjq.mix.common.dto.user.UserSearchDTO"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <trim prefix="where" prefixOverrides="and">
            <if test="username!=null">
                username LIKE CONCAT('%',#{username},'%')
            </if>
            <if test="nickname!=null">
                and nickname LIKE CONCAT('%',#{nickname},'%')
            </if>
            and is_delete = 0 and status = 1
        </trim>
        order by gmt_create DESC
    </select>
    <select id="checkUserExistByUsername" parameterType="java.lang.String" resultType="java.lang.Boolean">
        select count(1)
        from t_user
        where username = #{username}
          and is_delete = 0
          and status = 1
    </select>

    <select id="checkUserExistById" parameterType="java.lang.Long" resultType="java.lang.Boolean">
        select count(1)
        from t_user
        where id = #{userId}
          and is_delete = 0
          and status = 1
    </select>

    <select id="checkUserExistByIdAndName" resultType="java.lang.Boolean">
        select count(1)
        from t_user
        where username = #{username}
          and id != #{id}
          and is_delete = 0
          and status = 1
    </select>

    <delete id="deleteById">
        delete
        from t_user
        where id =
              #{userId}
    </delete>
</mapper>