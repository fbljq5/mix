/*
 Navicat Premium Data Transfer

 Source Server         : docker mysql
 Source Server Type    : MySQL
 Source Server Version : 80023
 Source Host           : mysql:3306
 Source Schema         : nacos_config

 Target Server Type    : MySQL
 Target Server Version : 80023
 File Encoding         : 65001

 Date: 22/04/2021 15:27:45
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 115 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (96, 'mix-admin-dev.yaml', 'dev', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n    \n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  ## redis配置\n  redis:\n    host: redis\n    password: 123456\n\n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n## JWT配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: MIX_SEC\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200', '942c56a53420955b10d36972cd1367eb', '2021-03-26 03:59:54', '2021-04-22 06:53:42', NULL, '1.2.3.1', '', 'dev', 'mix-admin-dev.yaml', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (108, 'mix-gateway-dev.yaml', 'dev', 'server:\n  port: 8502\n## JWT配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: MIX_SEC\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200\nspring:\n    ##redis 配置\n  redis:\n    host: redis\n    password: 123456\n    \n  cloud:\n     gateway:\n      globalcors:\n        # gateway 跨域设置\n        cors-configurations:\n          \'[/**]\':\n            allowedOriginPatterns: \"*\"\n            allowedHeaders: \"*\"\n            allowCredentials: true\n            allowedMethods:\n              - GET\n              - POST\n              - PUT\n              - OPTIONS\n      # 设置与服务注册发现组件结合，这样可以采用服务名的路由策略\n      discovery:\n        locator:\n          enabled: true\n      routes:\n        - id: mix-admin\n          uri: lb://mix-admin\n          predicates:\n            - Path=/mix-admin/**\n          filters:\n            - RewritePath=/mix-admin/(?<segment>.*), /$\\{segment}\n        - id: mix-auth\n          uri: lb://mix-auth\n          predicates:\n            - Path=/mix-auth/**\n          filters:\n            - RewritePath=/mix-auth/(?<segment>.*), /$\\{segment}\n        - id: mix-monitor\n          uri: lb://mix-monitor\n          predicates:\n            - Path=/mix-monitor/**\n          filters:\n            - RewritePath=/mix-monitor/(?<segment>.*), /$\\{segment}', '2455eac76a3fd62e32600d39edea732b', '2021-03-31 08:42:12', '2021-04-22 06:55:58', NULL, '1.2.3.1', '', 'dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (111, 'mix-auth-dev.yaml', 'dev', 'server:\n  port: 8503\n\n#spring\nspring:\n  application:\n    name: mix-auth\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  ##redis 配置\n  redis:\n    host: redis\n    password: 123456\n    \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n## JWT配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: MIX_SEC\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200', '55c8423019c849f9209c40d366c4a753', '2021-04-01 03:14:30', '2021-04-22 06:54:24', NULL, '1.2.3.1', '', 'dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (113, 'mix-monitor-dev.yaml', 'dev', 'server:\n  port: 8504\n\n#spring\nspring:\n  application:\n    name: mix-monitor\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '4c6b939c29b3b16c378a4de0fe254dc3', '2021-04-08 10:58:43', '2021-04-08 11:00:01', NULL, '1.2.3.1', '', 'dev', '', '', '', 'yaml', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint UNSIGNED NOT NULL,
  `nid` bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 45 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (0, 21, 'mix-admin', 'dev', '', '#app\r\nserver:\r\n  port: 8501\r\n\r\n#spring\r\nspring:\r\n  application:\r\n    name: mix-admin\r\n  security:\r\n    user:\r\n      name: admin\r\n      password: admin123\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: 123456\r\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    # 初始化大小，最小，最大\r\n    initialSize: 20\r\n    minIdle: 5\r\n    maxActive: 200\r\n\r\n    #连接等待超时时间\r\n    maxWait: 60000\r\n\r\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\r\n    timeBetweenEvictionRunsMillis: 60000\r\n\r\n    #配置连接在池中的最小生存时间\r\n    minEvictableIdleTimeMillis: 300000\r\n\r\n    validationQuery: SELECT 1 FROM DUAL\r\n\r\n    dbcp:\r\n      remove-abandoned: true\r\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\r\n      remove-abandoned-timeout: 180\r\n\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n  #redis\r\n  redis:\r\n    host: redis #redis的主机ip\r\n    port: 6379\r\n    password: 123456\r\n\r\n  rabbitmq:\r\n    host: rabbitmq #rabbitmq的主机ip\r\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\r\n    username: admin\r\n    password: admin\r\n    virtual-host: my_vhost  #注意此处前面没有/，也就是rabbit web管理界面上显示的vhost名字，在没有自定义vhost时，默认的vhost是 ‘/’\r\n\r\n\r\n# 激活Sentinel对Feign的支持\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n\r\n#ribbon的超时时间 30秒\r\nribbon:\r\n  ReadTimeout: 30000\r\n  ConnectTimeout: 30000\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n##jwt配置\r\ntokenHead: mixtkh_\r\ntokenHeader: mix-token\r\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\r\naudience:\r\n  secret: AB51B342F54F42C5861B16E7B1626D8A\r\n  name: mix\r\n  expiresSecond: 7200  #2个小时 3600*2=7200\r\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '95ca7317b00a20ba63aafba2c25996c4', '2021-03-26 11:59:11', '2021-03-26 03:59:12', NULL, '1.2.3.1', 'I', 'dev');
INSERT INTO `his_config_info` VALUES (95, 22, 'mix-admin', 'dev', '', '#app\r\nserver:\r\n  port: 8501\r\n\r\n#spring\r\nspring:\r\n  application:\r\n    name: mix-admin\r\n  security:\r\n    user:\r\n      name: admin\r\n      password: admin123\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: 123456\r\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    # 初始化大小，最小，最大\r\n    initialSize: 20\r\n    minIdle: 5\r\n    maxActive: 200\r\n\r\n    #连接等待超时时间\r\n    maxWait: 60000\r\n\r\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\r\n    timeBetweenEvictionRunsMillis: 60000\r\n\r\n    #配置连接在池中的最小生存时间\r\n    minEvictableIdleTimeMillis: 300000\r\n\r\n    validationQuery: SELECT 1 FROM DUAL\r\n\r\n    dbcp:\r\n      remove-abandoned: true\r\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\r\n      remove-abandoned-timeout: 180\r\n\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n  #redis\r\n  redis:\r\n    host: redis #redis的主机ip\r\n    port: 6379\r\n    password: 123456\r\n\r\n  rabbitmq:\r\n    host: rabbitmq #rabbitmq的主机ip\r\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\r\n    username: admin\r\n    password: admin\r\n    virtual-host: my_vhost  #注意此处前面没有/，也就是rabbit web管理界面上显示的vhost名字，在没有自定义vhost时，默认的vhost是 ‘/’\r\n\r\n\r\n# 激活Sentinel对Feign的支持\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n\r\n#ribbon的超时时间 30秒\r\nribbon:\r\n  ReadTimeout: 30000\r\n  ConnectTimeout: 30000\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n##jwt配置\r\ntokenHead: mixtkh_\r\ntokenHeader: mix-token\r\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\r\naudience:\r\n  secret: AB51B342F54F42C5861B16E7B1626D8A\r\n  name: mix\r\n  expiresSecond: 7200  #2个小时 3600*2=7200\r\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '95ca7317b00a20ba63aafba2c25996c4', '2021-03-26 11:59:33', '2021-03-26 03:59:34', NULL, '1.2.3.1', 'D', 'dev');
INSERT INTO `his_config_info` VALUES (0, 23, 'mix-admin-dev.yaml', 'dev', '', '#app\r\nserver:\r\n  port: 8501\r\n\r\n#spring\r\nspring:\r\n  application:\r\n    name: mix-admin\r\n  security:\r\n    user:\r\n      name: admin\r\n      password: admin123\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: 123456\r\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    # 初始化大小，最小，最大\r\n    initialSize: 20\r\n    minIdle: 5\r\n    maxActive: 200\r\n\r\n    #连接等待超时时间\r\n    maxWait: 60000\r\n\r\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\r\n    timeBetweenEvictionRunsMillis: 60000\r\n\r\n    #配置连接在池中的最小生存时间\r\n    minEvictableIdleTimeMillis: 300000\r\n\r\n    validationQuery: SELECT 1 FROM DUAL\r\n\r\n    dbcp:\r\n      remove-abandoned: true\r\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\r\n      remove-abandoned-timeout: 180\r\n\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n  #redis\r\n  redis:\r\n    host: redis #redis的主机ip\r\n    port: 6379\r\n    password: 123456\r\n\r\n  rabbitmq:\r\n    host: rabbitmq #rabbitmq的主机ip\r\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\r\n    username: admin\r\n    password: admin\r\n    virtual-host: my_vhost  #注意此处前面没有/，也就是rabbit web管理界面上显示的vhost名字，在没有自定义vhost时，默认的vhost是 ‘/’\r\n\r\n\r\n# 激活Sentinel对Feign的支持\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n\r\n#ribbon的超时时间 30秒\r\nribbon:\r\n  ReadTimeout: 30000\r\n  ConnectTimeout: 30000\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n##jwt配置\r\ntokenHead: mixtkh_\r\ntokenHeader: mix-token\r\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\r\naudience:\r\n  secret: AB51B342F54F42C5861B16E7B1626D8A\r\n  name: mix\r\n  expiresSecond: 7200  #2个小时 3600*2=7200\r\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '95ca7317b00a20ba63aafba2c25996c4', '2021-03-26 11:59:53', '2021-03-26 03:59:54', NULL, '1.2.3.1', 'I', 'dev');
INSERT INTO `his_config_info` VALUES (96, 24, 'mix-admin-dev.yaml', 'dev', '', '#app\r\nserver:\r\n  port: 8501\r\n\r\n#spring\r\nspring:\r\n  application:\r\n    name: mix-admin\r\n  security:\r\n    user:\r\n      name: admin\r\n      password: admin123\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: 123456\r\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    # 初始化大小，最小，最大\r\n    initialSize: 20\r\n    minIdle: 5\r\n    maxActive: 200\r\n\r\n    #连接等待超时时间\r\n    maxWait: 60000\r\n\r\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\r\n    timeBetweenEvictionRunsMillis: 60000\r\n\r\n    #配置连接在池中的最小生存时间\r\n    minEvictableIdleTimeMillis: 300000\r\n\r\n    validationQuery: SELECT 1 FROM DUAL\r\n\r\n    dbcp:\r\n      remove-abandoned: true\r\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\r\n      remove-abandoned-timeout: 180\r\n\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n  #redis\r\n  redis:\r\n    host: redis #redis的主机ip\r\n    port: 6379\r\n    password: 123456\r\n\r\n  rabbitmq:\r\n    host: rabbitmq #rabbitmq的主机ip\r\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\r\n    username: admin\r\n    password: admin\r\n    virtual-host: my_vhost  #注意此处前面没有/，也就是rabbit web管理界面上显示的vhost名字，在没有自定义vhost时，默认的vhost是 ‘/’\r\n\r\n\r\n# 激活Sentinel对Feign的支持\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n\r\n#ribbon的超时时间 30秒\r\nribbon:\r\n  ReadTimeout: 30000\r\n  ConnectTimeout: 30000\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n##jwt配置\r\ntokenHead: mixtkh_\r\ntokenHeader: mix-token\r\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\r\naudience:\r\n  secret: AB51B342F54F42C5861B16E7B1626D8A\r\n  name: mix\r\n  expiresSecond: 7200  #2个小时 3600*2=7200\r\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '95ca7317b00a20ba63aafba2c25996c4', '2021-03-26 12:01:14', '2021-03-26 04:01:14', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (96, 25, 'mix-admin-dev.yaml', 'dev', '', '#spring\nspring:\n  security:\n    user:\n      name: admin\n      password: admin123\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    validationQuery: SELECT 1 FROM DUAL\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #redis\n  redis:\n    host: redis #redis的主机ip\n    port: 6379\n    password: 123456\n\n  rabbitmq:\n    host: rabbitmq #rabbitmq的主机ip\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\n    username: admin\n    password: admin\n    virtual-host: my_vhost  #注意此处前面没有/，也就是rabbit web管理界面上显示的vhost名字，在没有自定义vhost时，默认的vhost是 ‘/’\n\n\n# 激活Sentinel对Feign的支持\nfeign:\n  sentinel:\n    enabled: true\n\n#ribbon的超时时间 30秒\nribbon:\n  ReadTimeout: 30000\n  ConnectTimeout: 30000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'd73d5fd045a2dfb90512900456209355', '2021-03-26 13:32:53', '2021-03-26 05:32:54', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (96, 26, 'mix-admin-dev.yaml', 'dev', '', '#spring\nspring:\n  security:\n    user:\n      name: admin\n      password: admin123\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    validationQuery: SELECT 1 FROM DUAL\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #redis\n  redis:\n    host: redis #redis的主机ip\n    port: 6379\n    password: 123456\n\n  rabbitmq:\n    host: rabbitmq #rabbitmq的主机ip\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\n    username: admin\n    password: admin\n    virtual-host: my_vhost  #注意此处前面没有/，也就是rabbit web管理界面上显示的vhost名字，在没有自定义vhost时，默认的vhost是 ‘/’\n\n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:/mapper/*.xml\n\n# 激活Sentinel对Feign的支持\nfeign:\n  sentinel:\n    enabled: true\n\n#ribbon的超时时间 30秒\nribbon:\n  ReadTimeout: 30000\n  ConnectTimeout: 30000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '051ce114ef2d598c6f067b5c53df357f', '2021-03-26 14:03:51', '2021-03-26 06:03:52', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (96, 27, 'mix-admin-dev.yaml', 'dev', '', '#spring\nspring:\n  security:\n    user:\n      name: admin\n      password: admin123\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    validationQuery: SELECT 1 FROM DUAL\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #redis\n  redis:\n    host: redis #redis的主机ip\n    port: 6379\n    password: 123456\n\n  rabbitmq:\n    host: rabbitmq #rabbitmq的主机ip\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\n    username: admin\n    password: admin\n    virtual-host: my_vhost  #注意此处前面没有/，也就是rabbit web管理界面上显示的vhost名字，在没有自定义vhost时，默认的vhost是 ‘/’\n\n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:/mapper/*.xml\n\n# 激活Sentinel对Feign的支持\nfeign:\n  sentinel:\n    enabled: true\n\n#ribbon的超时时间 30秒\nribbon:\n  ReadTimeout: 30000\n  ConnectTimeout: 30000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '051ce114ef2d598c6f067b5c53df357f', '2021-03-26 15:15:18', '2021-03-26 07:15:18', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (96, 28, 'mix-admin-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  cloud:\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '216270109f3fb867e3a98a16e18bc1dd', '2021-03-26 15:36:12', '2021-03-26 07:36:13', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (0, 29, 'example.properties', 'DEFAULT_GROUP', '', 'useLocalCache=true', '25a822367cd73c79acc56da3c73fa07e', '2021-03-26 17:00:28', '2021-03-26 09:00:29', NULL, '172.17.0.1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 30, 'mix-admin-dev.properties', 'dev', '', 'useLocalCache=true', '25a822367cd73c79acc56da3c73fa07e', '2021-03-26 17:01:02', '2021-03-26 09:01:03', NULL, '172.17.0.1', 'I', '');
INSERT INTO `his_config_info` VALUES (102, 31, 'example.properties', 'DEFAULT_GROUP', '', 'useLocalCache=true', '25a822367cd73c79acc56da3c73fa07e', '2021-03-26 17:01:21', '2021-03-26 09:01:21', NULL, '1.2.3.1', 'D', '');
INSERT INTO `his_config_info` VALUES (96, 32, 'mix-admin-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'c9fdeddf51e3c43dda376634e30f7dc3', '2021-03-26 17:53:30', '2021-03-26 09:53:31', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (0, 33, 'mix-admin.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'c9fdeddf51e3c43dda376634e30f7dc3', '2021-03-26 18:36:13', '2021-03-26 10:36:14', NULL, '1.2.3.1', 'I', 'dev');
INSERT INTO `his_config_info` VALUES (103, 34, 'mix-admin-dev.properties', 'dev', '', 'useLocalCache=true', '25a822367cd73c79acc56da3c73fa07e', '2021-03-26 18:36:31', '2021-03-26 10:36:32', NULL, '1.2.3.1', 'D', '');
INSERT INTO `his_config_info` VALUES (96, 35, 'mix-admin-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'c9fdeddf51e3c43dda376634e30f7dc3', '2021-03-27 07:46:32', '2021-03-26 23:46:32', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (96, 36, 'mix-admin-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '3e43d27b6bf29d4de4b9590844b7bf34', '2021-03-27 07:47:13', '2021-03-26 23:47:13', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (0, 37, 'mix-gateway-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'c9fdeddf51e3c43dda376634e30f7dc3', '2021-03-31 16:42:12', '2021-03-31 08:42:12', NULL, '1.2.3.1', 'I', 'dev');
INSERT INTO `his_config_info` VALUES (108, 38, 'mix-gateway-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'c9fdeddf51e3c43dda376634e30f7dc3', '2021-03-31 16:42:38', '2021-03-31 08:42:39', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (0, 39, 'mix-auth-dev.yaml', 'dev', '', 'server:\n  port: 8502\n', 'd9438e4a931567b44147b931b3db0ce1', '2021-04-01 11:13:54', '2021-04-01 03:13:55', NULL, '1.2.3.1', 'I', 'dev');
INSERT INTO `his_config_info` VALUES (110, 40, 'mix-auth-dev.yaml', 'dev', '', 'server:\n  port: 8502\n', 'd9438e4a931567b44147b931b3db0ce1', '2021-04-01 11:14:17', '2021-04-01 03:14:17', NULL, '1.2.3.1', 'D', 'dev');
INSERT INTO `his_config_info` VALUES (0, 41, 'mix-auth-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'c9fdeddf51e3c43dda376634e30f7dc3', '2021-04-01 11:14:30', '2021-04-01 03:14:30', NULL, '1.2.3.1', 'I', 'dev');
INSERT INTO `his_config_info` VALUES (111, 42, 'mix-auth-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'c9fdeddf51e3c43dda376634e30f7dc3', '2021-04-01 11:14:52', '2021-04-01 03:14:53', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (0, 43, 'mix-monitor-dev.yaml', 'dev', '', 'server:\n  port: 8503\n\n#spring\nspring:\n  application:\n    name: mix-auth\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '1ba7ce8a7b47d44328180a51652ff328', '2021-04-08 18:58:43', '2021-04-08 10:58:43', NULL, '1.2.3.1', 'I', 'dev');
INSERT INTO `his_config_info` VALUES (113, 44, 'mix-monitor-dev.yaml', 'dev', '', 'server:\n  port: 8503\n\n#spring\nspring:\n  application:\n    name: mix-auth\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '1ba7ce8a7b47d44328180a51652ff328', '2021-04-08 19:00:01', '2021-04-08 11:00:01', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (96, 45, 'mix-admin-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'c9fdeddf51e3c43dda376634e30f7dc3', '2021-04-22 11:07:50', '2021-04-22 03:07:51', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (111, 46, 'mix-auth-dev.yaml', 'dev', '', 'server:\n  port: 8503\n\n#spring\nspring:\n  application:\n    name: mix-auth\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntokenHead: mixtkh_\ntokenHeader: mix-token\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  secret: AB51B342F54F42C5861B16E7B1626D8A\n  name: mix\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '1ba7ce8a7b47d44328180a51652ff328', '2021-04-22 11:08:27', '2021-04-22 03:08:27', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (111, 47, 'mix-auth-dev.yaml', 'dev', '', 'server:\n  port: 8503\n\n#spring\nspring:\n  application:\n    name: mix-auth\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntoken:\n  config:\n    tokenHeader: mix-token\n    secret: AB51B342F54F42C5861B16E7B1626D8A\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200\n    refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'a6cd9472ae013a2e6059b686b9b7e6e5', '2021-04-22 11:09:41', '2021-04-22 03:09:42', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (96, 48, 'mix-admin-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\ntoken:\n  config:\n    tokenHeader: mix-token\n    secret: AB51B342F54F42C5861B16E7B1626D8A\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200\n    refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'd201a08f4fe2be2b478015663c515fd8', '2021-04-22 11:09:54', '2021-04-22 03:09:54', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (96, 49, 'mix-admin-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: AB51B342F54F42C5861B16E7B1626D8A\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200\n    refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '98c2fff42748f4083ae6d785674b9338', '2021-04-22 11:11:37', '2021-04-22 03:11:37', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (111, 50, 'mix-auth-dev.yaml', 'dev', '', 'server:\n  port: 8503\n\n#spring\nspring:\n  application:\n    name: mix-auth\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n##jwt配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: AB51B342F54F42C5861B16E7B1626D8A\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200\n    refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'f902240145e29f90001967c6cf05e915', '2021-04-22 11:11:58', '2021-04-22 03:11:58', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (96, 51, 'mix-admin-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: AB51B342F54F42C5861B16E7B1626D8A\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200', 'ea825c1d20f52bb86a88eeca13edc816', '2021-04-22 11:12:09', '2021-04-22 03:12:09', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (96, 52, 'mix-admin-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n## JWT配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: AB51B342F54F42C5861B16E7B1626D8A\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200', 'b3ccfddb6bc1c6be1f5f2b1e4ee23347', '2021-04-22 14:49:16', '2021-04-22 06:49:17', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (108, 53, 'mix-gateway-dev.yaml', 'dev', '', 'server:\n  port: 8502\n', 'd9438e4a931567b44147b931b3db0ce1', '2021-04-22 14:49:28', '2021-04-22 06:49:28', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (108, 54, 'mix-gateway-dev.yaml', 'dev', '', 'server:\n  port: 8502\n## JWT配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: AB51B342F54F42C5861B16E7B1626D8A\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200', 'c4d1547b1ca7e31cd27cb18641fa9cbd', '2021-04-22 14:50:52', '2021-04-22 06:50:53', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (111, 55, 'mix-auth-dev.yaml', 'dev', '', 'server:\n  port: 8503\n\n#spring\nspring:\n  application:\n    name: mix-auth\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n## JWT配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: AB51B342F54F42C5861B16E7B1626D8A\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200', '7729da607cbf075562fbf371c0eab1d4', '2021-04-22 14:51:06', '2021-04-22 06:51:07', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (111, 56, 'mix-auth-dev.yaml', 'dev', '', 'server:\n  port: 8503\n\n#spring\nspring:\n  application:\n    name: mix-auth\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n## JWT配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: MIX_SEC\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200', 'c047045d2ac57a51384ec3d48001c91f', '2021-04-22 14:51:12', '2021-04-22 06:51:12', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (96, 57, 'mix-admin-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n## JWT配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: AB51B342F54F42C5861B16E7B1626D8A\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200', 'b3ccfddb6bc1c6be1f5f2b1e4ee23347', '2021-04-22 14:51:25', '2021-04-22 06:51:25', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (39, 59, 'mogu-gateway-dev.yaml', 'dev', '', 'server:\r\n  port: 8607\r\n', 'e67789b1e391fae7f383fcfc43a04966', '2021-04-22 14:51:52', '2021-04-22 06:51:53', NULL, '1.2.3.1', 'D', 'dev');
INSERT INTO `his_config_info` VALUES (40, 60, 'mogu-monitor-dev.yaml', 'dev', '', 'server:\n  port: 8606\n\nspring:\n  application:\n    name: mogu-monitor\n  security:\n    user:\n      name: user\n      password: password123\n  boot:\n    admin:\n      ui:\n        title: 蘑菇博客监控中心\n        brand: 蘑菇博客监控中心\n      notify:\n        mail:\n          enabled: false\n          # 服务上下线会自动发送邮件\n          #from: mogublog@163.com\n          #to: moxi0624@163.com\n\n  #mail\n  mail:\n    username: mogublog@163.com\n    password: a1313375 #授权码开启SMTP服务里设置\n    host: smtp.163.com\n\n    properties:\n      mail:\n        smtp:\n          auth: true\n          starttls:\n            enable: true\n            required: true\n          ssl:\n            enable: true\n\n#eureka相关配置\n#eureka:\n#  client:\n#    healthcheck:\n#      enabled: true\n#    serviceUrl:\n#      defaultZone: http://user:password123@localhost:8761/eureka\n#  instance:\n#    prefer-ip-address: true\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\n#    health-check-url-path: /actuator/health\n#    metadata-map:\n#      user.name: admin\n#      user.password: 123456\n#    lease-renewal-interval-in-seconds: 5\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848', '128950ada368dce171602435dffa2d21', '2021-04-22 14:51:55', '2021-04-22 06:51:55', NULL, '1.2.3.1', 'D', 'dev');
INSERT INTO `his_config_info` VALUES (41, 61, 'mogu-picture-dev.yaml', 'dev', '', '#app\nserver:\n  port: 8602\n  max-http-header-size: 102400\n\nfile:\n  upload:\n    path: D:/mogu_blog/data/\n\n#spring\nspring:\n  servlet:\n    multipart:\n      enabled: true\n      max-file-size: 100MB # 修改单次文件上传文件大小不能超过100MB\n      max-request-size: 500MB # 设置单次文件请求总大小不能超过500MB\n\n  jmx:\n    default-domain: mogu-picture\n  thymeleaf:\n    cache: true   #关闭缓存\n  application:\n    name: mogu-picture\n  security:\n    user:\n      name: user\n      password: password123\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8602\n\n  #redis\n  redis:\n    host: redis #redis的主机ip\n    port: 6379\n    password: 123456  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mogu_picture?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  mvc:\n    static-path-pattern: /upload/**\n  resources:\n    static-locations: classpath:/static/upload\n\n# eureka:\n#   client:\n#     healthcheck:\n#       enabled: true\n#     registerWithEureka: true\n#     fetchRegistry: true\n#     serviceUrl:\n#       defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\n#   instance:\n#     prefer-ip-address: true\n#     instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\n#     lease-renewal-interval-in-seconds: 5\n#     appname: mogu-picture\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false', '28079292da5ee824a1e42508fc753934', '2021-04-22 14:51:58', '2021-04-22 06:51:58', NULL, '1.2.3.1', 'D', 'dev');
INSERT INTO `his_config_info` VALUES (42, 62, 'mogu-search-dev.yaml', 'dev', '', 'server:\n  port: 8605\nspring:\n  application:\n    name: mogu-search\n  jmx:\n    default-domain: mogu-search\n  security:\n    user:\n      name: user\n      password: password123\n  data:\n    elasticsearch:\n      cluster-name: elasticsearch\n      cluster-nodes: es:9300\n    # solr:\n    #   host: http://localhost:8080/solr\n    #   core: collection1\n    #   repositories:\n    #     enabled: true\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n      instance:\n        service-base-url: http://localhost:8605\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n\n# 激活Sentinel对Feign的支持\nfeign:\n  sentinel:\n    enabled: true\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always', '59452e753ed9056338192a8aa2f99ad7', '2021-04-22 14:52:01', '2021-04-22 06:52:01', NULL, '1.2.3.1', 'D', 'dev');
INSERT INTO `his_config_info` VALUES (43, 63, 'mogu-sms-dev.yaml', 'dev', '', '#app\nserver:\n  port: 8604\n\n#阿里大于\naccessKeyId: XXXXXXXXXXXXXXXXXXXXX #修改成自己的\naccessKeySecret: XXXXXXXXXXXXXXXXXXXXXXX #修改成自己的\n\n#spring\nspring:\n  jmx:\n    default-domain: mogu-sms\n  thymeleaf:\n    cache: true   #关闭缓存\n  application:\n    name: mogu-sms\n  security:\n    user:\n      name: user\n      password: password123\n  #redis\n  redis:\n    host: redis #redis的主机ip\n    port: 6379\n    password: 123456\n\n  #RabbitMq\n  rabbitmq:\n    host: rabbitmq #rabbitmq的主机ip\n    port: 5672\n    username: admin\n    password: admin\n    virtual-host: my_vhost  #注意此处前面没有/，也就是rabbit web管理界面上显示的vhost名字，在没有自定义vhost时，默认的vhost是 ‘/’\n\n  #mail\n  mail:\n    username: mogublog@163.com \n    password: a1313375 #授权码开启SMTP服务里设置\n    host: smtp.163.com\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          ssl:\n            enable: true\n          socketFactory:\n            port: 465\n            class: javax.net.ssl.SSLSocketFactory\n          auth: true\n          starttls:\n            enable: false\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8604\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n\n# 激活Sentinel对Feign的支持\nfeign:\n  sentinel:\n    enabled: true\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always', 'd6114398ae23c70ec84206c6a19a6a94', '2021-04-22 14:52:04', '2021-04-22 06:52:04', NULL, '1.2.3.1', 'D', 'dev');
INSERT INTO `his_config_info` VALUES (58, 64, 'mogu-spider-dev.yaml', 'dev', '', '#app\r\nserver:\r\n  port: 8608\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu-spider\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-spider\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8608\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\neureka:\r\n  client:\r\n    healthcheck:\r\n      enabled: true\r\n    registerWithEureka: true\r\n    fetchRegistry: true\r\n    serviceUrl:\r\n      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n  instance:\r\n    prefer-ip-address: true\r\n    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n    lease-renewal-interval-in-seconds: 5\r\n    appname: mogu-spider\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.spider.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false', 'ccad980b396c0c89946de126cb83303e', '2021-04-22 14:52:07', '2021-04-22 06:52:07', NULL, '1.2.3.1', 'D', 'dev');
INSERT INTO `his_config_info` VALUES (59, 65, 'mogu-web-dev.yaml', 'dev', '', '#app\nserver:\n  port: 8603\n\ndata:\n  # 门户页面  如果有域名：http://www.moguit.cn/#/   如果没有域名：http://localhost:9527/#/\n  webSite:\n    url: http://localhost:9527/#/\n  \n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://127.0.0.1:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/mogu_blog_v2/raw/Nacos/doc/icon/favicon2.ico\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n\nfile:\n  upload:\n    path: D:/mogu_blog/data/\n\n# 蘑菇博客登录默认密码\nDEFAULE_PWD: mogu2018\n\n#请求限制参数\nrequest-limit:\n  start: false # 是否开启请求限制，默认关闭\n  amount: 100 # 100次\n  time: 60000 # 1分钟\n\n#博客相关配置\nBLOG:\n  HOT_COUNT: 5 #热门博客数量\n  HOT_TAG_COUNT: 20 #热门标签数量\n  FRIENDLY_LINK_COUNT: 20 #友情链接数\n  NEW_COUNT: 15 #最新博客数据\n  FIRST_COUNT: 5 #一级推荐\n  SECOND_COUNT: 2 #二级推荐\n  THIRD_COUNT: 3 #三级推荐\n  FOURTH_COUNT: 5 #四级推荐\n  USER_TOKEN_SURVIVAL_TIME: 168 # toekn令牌存活时间, 7天  168 = 7*24\n\n  # 原创模板\n  ORIGINAL_TEMPLATE: 本文为蘑菇博客原创文章，转载无需和我联系，但请注明来自蘑菇博客 http://www.moguit.cn\n  # 转载模板\n  REPRINTED_TEMPLATE: 本着开源共享、共同学习的精神，本文转载自 <a href=\'%s\'target=\'_blank\'>%s</a> ，版权归 %s 所有，如果侵权之处，请联系博主进行删除，谢谢~\n\n#spring\nspring:\n  jmx:\n    default-domain: mogu-web\n  # freemarker相关配置\n  freemarker:\n    charset: utf-8\n    suffix: .ftl\n    content-type: text/html\n    template-loader-path: classpath:/templates\n  # jackson配置响应时间格式、时区\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n\n  application:\n    name: mogu-web\n  security:\n    user:\n      name: user\n      password: password123\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 5\n    minIdle: 5\n    maxActive: 50\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #Solr配置信息\n  data:\n    solr:\n      host: http://localhost:8080/solr\n      core: collection1\n      repositories:\n        enabled: true\n\n  #redis\n  redis:\n    host: redis #redis的主机ip\n    port: 6379\n    password: 123456  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\n\n  rabbitmq:\n    host: rabbitmq #rabbitmq的主机ip\n    port: 5672\n    username: admin\n    password: admin\n    virtual-host: my_vhost  #注意此处前面没有/，也就是rabbit web管理界面上显示的vhost名字，在没有自定义vhost时，默认的vhost是 ‘/’\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8603\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n\n\n# 设置feign调用超时时间\nribbon:\n  ReadTimeout: 20000\n  ConnectTimeout: 20000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n# 第三方登录，参考 http://moguit.cn/#/info?blogUid=fe9e352eb95205a08288f21ec3cc69e0\njustAuth:\n  clientId:\n    gitee: ec2dba332701caa209935512c69fc7962530b8619acd9b6cb03106a7c13c1c5e # 改成自己的\n    github: c99bfe31f8774ec8e242 # 改成自己的\n    qq: 101880644  # 改成自己的\n  clientSecret:\n    gitee: 993930de16b61b8146f7d30c693afd328b4d42116cf2da748f275077e4ef5e47 # 改成自己的\n    github: ec088d14ab8076e2beed58fcb95e37a0fc586618 # 改成自己的\n    qq: cbc294d36dabeac4bf6c31ced8bf930f # 改成自己的\n\n# uniapp相关配置，如果需要发布移动端博客小程序时使用\nuniapp:\n  qq:\n    appid: 1110769790  # 改成自己的\n    secret: zWZBLzBcekMUTP60  # 改成自己的\n    grant_type: authorization_code', 'c97c8a9e59a4784b96f210efaeb655fd', '2021-04-22 14:52:10', '2021-04-22 06:52:10', NULL, '1.2.3.1', 'D', 'dev');
INSERT INTO `his_config_info` VALUES (72, 66, 'mogu-commons.yml', 'dev', '', '#spring\nspring:\n  jackson:\n    serialization:\n      INDENT_OUTPUT: true\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n  security:\n    user:\n      name: user\n      password: password123\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n  #redis\n  redis:\n    host: redis #redis的主机ip\n    port: 6379\n    password: 123456\n\n  rabbitmq:\n    host: rabbitmq #rabbitmq的主机ip\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\n    username: admin\n    password: admin\n    virtual-host: my_vhost  #注意此处前面没有/，也就是rabbit web管理界面上显示的vhost名字，在没有自定义vhost时，默认的vhost是 ‘/’\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8601\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848', 'c1fce76ea8c1622d3043a4c32bdc87b3', '2021-04-22 14:52:13', '2021-04-22 06:52:13', NULL, '1.2.3.1', 'D', 'dev');
INSERT INTO `his_config_info` VALUES (74, 68, 'mogu-gateway-prod.yaml', 'prod', '', 'server:\n  port: 8607\n', 'cfba5ed8647a0a24f76f188031cf6716', '2021-04-22 14:52:28', '2021-04-22 06:52:29', NULL, '1.2.3.1', 'D', 'prod');
INSERT INTO `his_config_info` VALUES (75, 69, 'mogu-monitor-prod.yaml', 'prod', '', 'server:\r\n  port: 8606\r\n\r\nspring:\r\n  application:\r\n    name: mogu-monitor\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      ui:\r\n        title: 蘑菇博客监控中心\r\n        brand: 蘑菇博客监控中心\r\n      notify:\r\n        mail:\r\n          enabled: false\r\n          # 服务上下线会自动发送邮件\r\n          from: mogublog@163.com\r\n          to: moxi0624@163.com\r\n\r\n  #mail\r\n  mail:\r\n    username: mogublog@163.com  # 改成自己的\r\n    password: a1313375 #授权码开启SMTP服务里设置，改成自己的\r\n    host: smtp.163.com\r\n\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          auth: true\r\n          starttls:\r\n            enable: true\r\n            required: true\r\n          ssl:\r\n            enable: true', '4ffa41149ca0c00d9878425afb834048', '2021-04-22 14:52:28', '2021-04-22 06:52:29', NULL, '1.2.3.1', 'D', 'prod');
INSERT INTO `his_config_info` VALUES (76, 70, 'mogu-picture-prod.yaml', 'prod', '', '#app\r\nserver:\r\n  port: 8602\r\n\r\nfile:\r\n  upload:\r\n    path: /home/mogu_blog/mogu_data/\r\n\r\n#spring\r\nspring:\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      max-file-size: 100MB # 修改单次文件上传文件大小不能超过10MB\r\n      max-request-size: 500MB # 设置单次文件请求总大小不能超过50MB\r\n\r\n  jmx:\r\n    default-domain: mogu_picture\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-picture\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8602\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n    password: mogu2018\r\n          \r\n          \r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: mogu2018\r\n    url: jdbc:mysql://localhost:3306/mogu_picture?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false', 'bdcf6a399fb91705a793804e771f5e5f', '2021-04-22 14:52:28', '2021-04-22 06:52:29', NULL, '1.2.3.1', 'D', 'prod');
INSERT INTO `his_config_info` VALUES (77, 71, 'mogu-search-prod.yaml', 'prod', '', 'server:\r\n  port: 8605\r\nspring:\r\n  application:\r\n    name: mogu-search\r\n  jmx:\r\n    default-domain: mogu-search\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  data:\r\n    #    elasticsearch:\r\n    #      cluster-name: elasticsearch\r\n    #      cluster-nodes: localhost:9300\r\n    solr:\r\n      host: http://localhost:8080/solr\r\n      core: collection1\r\n      repositories:\r\n        enabled: true\r\n\r\n  #  jackson:\r\n  #    default-property-inclusion: non_null\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8605\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always', 'bd718705e45381fd75dcf0a35251be84', '2021-04-22 14:52:28', '2021-04-22 06:52:29', NULL, '1.2.3.1', 'D', 'prod');
INSERT INTO `his_config_info` VALUES (78, 72, 'mogu-sms-prod.yaml', 'prod', '', '#app\r\nserver:\r\n  port: 8604\r\n\r\n#阿里大于\r\naccessKeyId: XXXXXXXXXXXXXXXXXXXXXXXXX #修改成自己的\r\naccessKeySecret: XXXXXXXXXXXXXXXXXXXXXXXXXX #修改成自己的\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_sms\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-sms\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n    password: mogu2018\r\n\r\n  #RabbitMq\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672\r\n    username: admin\r\n    password: mogu2018\r\n\r\n  #mail\r\n  mail:\r\n    username: mogublog@163.com # 修改成自己的\r\n    password: a1313375 #授权码开启SMTP服务里设置，这里修改成自己的\r\n    host: smtp.163.com\r\n    default-encoding: UTF-8\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          ssl:\r\n            enable: true\r\n          socketFactory:\r\n            port: 465\r\n            class: javax.net.ssl.SSLSocketFactory\r\n          auth: true\r\n          starttls:\r\n            enable: false\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8604\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always', 'c74122e9b40089504325fac44f11c5be', '2021-04-22 14:52:28', '2021-04-22 06:52:29', NULL, '1.2.3.1', 'D', 'prod');
INSERT INTO `his_config_info` VALUES (79, 73, 'mogu-spider-prod.yaml', 'prod', '', '#app\r\nserver:\r\n  port: 8608\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_spider\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-spider\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8608\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n    password: mogu2018\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: mogu2018\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.spider.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false', 'cb6fd0b8ad533cbd0c7f7675ed98ef70', '2021-04-22 14:52:28', '2021-04-22 06:52:29', NULL, '1.2.3.1', 'D', 'prod');
INSERT INTO `his_config_info` VALUES (80, 74, 'mogu-web-prod.yaml', 'prod', '', '#app\nserver:\n  port: 8603\n\ndata:\n  # 门户页面  如果没有域名，使用 http://120.78.126.96:9527/#/\n  webSite:\n    url: http://demoweb.moguit.cn/#/ \n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://120.78.126.96:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/mogu_blog_v2/raw/Nacos/doc/icon/favicon2.ico\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n    \nfile:\n  upload:\n    path: /home/mogu_blog/mogu_data/\n\n# 蘑菇博客登录默认密码\nDEFAULE_PWD: mogu2018\n\n#请求限制参数\nrequest-limit:\n  start: false # 是否开启请求限制，默认关闭\n  amount: 100 # 100次\n  time: 60000 # 1分钟\n\n#博客相关配置\nBLOG:\n  HOT_COUNT: 5 #热门博客数量\n  HOT_TAG_COUNT: 20 #热门标签数量\n  FRIENDLY_LINK_COUNT: 20 #友情链接数\n  NEW_COUNT: 15 #最新博客数据\n  FIRST_COUNT: 5 #一级推荐\n  SECOND_COUNT: 2 #二级推荐\n  THIRD_COUNT: 3 #三级推荐\n  FOURTH_COUNT: 5 #四级推荐\n  USER_TOKEN_SURVIVAL_TIME: 168 # toekn令牌存活时间, 7天  168 = 7*24\n\n  # 原创模板\n  ORIGINAL_TEMPLATE: 本文为蘑菇博客原创文章，转载无需和我联系，但请注明来自蘑菇博客 http://www.moguit.cn\n  # 转载模板\n  REPRINTED_TEMPLATE: 本着开源共享、共同学习的精神，本文转载自 <a href=\'%s\'target=\'_blank\'>%s</a> ，版权归 %s 所有，如果侵权之处，请联系博主进行删除，谢谢~\n\n#spring\nspring:\n  jmx:\n    default-domain: mogu_web\n  # freemarker相关配置\n  freemarker:\n    charset: utf-8\n    suffix: .ftl\n    content-type: text/html\n    template-loader-path: classpath:/templates\n  # jackson配置响应时间格式、时区\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n\n  application:\n    name: mogu-web\n  security:\n    user:\n      name: user\n      password: password123\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: mogu2018\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 5\n    minIdle: 5\n    maxActive: 50\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #Solr配置信息\n  data:\n    solr:\n      host: http://localhost:8080/solr\n      core: collection1\n      repositories:\n        enabled: true\n\n  #redis\n  redis:\n    host: 127.0.0.1 #redis的主机ip\n    port: 6379\n    password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\n\n  rabbitmq:\n    host: 127.0.0.1 #rabbitmq的主机ip\n    port: 5672\n    username: admin\n    password: mogu2018\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8603\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n\n# 或者：\nfeign.hystrix.enabled: false # 索性禁用feign的hystrix支持\n# 设置feign调用超时时间\nribbon:\n  ReadTimeout: 20000\n  ConnectTimeout: 20000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n# 第三方登录，参考 http://moguit.cn/#/info?blogUid=fe9e352eb95205a08288f21ec3cc69e0\njustAuth:\n  clientId:\n    gitee: ec2dba332701caa209935512c69fc7962530b8619acd9b6cb03106a7c13c1c5e\n    github: c99bfe31f8774ec8e242\n    qq: 101880644  # 改成自己的\n  clientSecret:\n    gitee: 993930de16b61b8146f7d30c693afd328b4d42116cf2da748f275077e4ef5e47\n    github: ec088d14ab8076e2beed58fcb95e37a0fc586618\n    qq: cbc294d36dabeac4bf6c31ced8bf930f # 改成自己的\n\n# uniapp相关配置\nuniapp:\n  qq:\n    appid: 1110769790  # 改成自己的\n    secret: zWZBLzBcekMUTP60  # 改成自己的\n    grant_type: authorization_code', '8e6bb16c6d6b8f8151c8a70e4d5c3053', '2021-04-22 14:52:28', '2021-04-22 06:52:29', NULL, '1.2.3.1', 'D', 'prod');
INSERT INTO `his_config_info` VALUES (96, 75, 'mix-admin-dev.yaml', 'dev', '', 'server:\n  port: 8501\n\n#spring\nspring:\n  application:\n    name: mix-admin\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n## JWT配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: MIX_SEC\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200', 'f25a68d450237e85769d28aa24164ff1', '2021-04-22 14:53:42', '2021-04-22 06:53:42', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (111, 76, 'mix-auth-dev.yaml', 'dev', '', 'server:\n  port: 8503\n\n#spring\nspring:\n  application:\n    name: mix-auth\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://mysql:3306/mix?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.zaxxer.hikari.HikariDataSource\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n    #连接等待超时时间\n    maxWait: 60000\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  \n# MyBatis\nmybatis:\n  # 数据库映射实体类包路径\n  type-aliases-package: cn.liangjq.mix.common.entity\n  mapper-locations: classpath:mapper/*.xml\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n## JWT配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: MIX_SEC\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200', 'c047045d2ac57a51384ec3d48001c91f', '2021-04-22 14:54:24', '2021-04-22 06:54:24', NULL, '1.2.3.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (108, 77, 'mix-gateway-dev.yaml', 'dev', '', 'server:\n  port: 8502\n## JWT配置\njwt:\n  config:\n    tokenHeader: mix-token\n    secret: MIX_SEC\n    name: mix\n    expiresSecond: 7200  #2个小时 3600*2=7200', '4e56d78ef27ae4e9c6fcfb23852c6e33', '2021-04-22 14:55:58', '2021-04-22 06:55:58', NULL, '1.2.3.1', 'U', 'dev');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `resource` varchar(512) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of permissions
-- ----------------------------
INSERT INTO `permissions` VALUES ('ROLE_ADMIN', ':*:*', 'rw');
INSERT INTO `permissions` VALUES ('ROLE_ADMIN', 'dev:*:*', 'rw');
INSERT INTO `permissions` VALUES ('ROLE_ADMIN', 'prod:*:*', 'rw');
INSERT INTO `permissions` VALUES ('ROLE_ADMIN', 'test:*:*', 'rw');

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (4, '1', 'dev', 'dev', '开发环境', 'nacos', 1592618800112, 1592618800112);
INSERT INTO `tenant_info` VALUES (5, '1', 'prod', 'prod', '生产环境', 'nacos', 1592618913047, 1592618913047);
INSERT INTO `tenant_info` VALUES (6, '1', 'test', 'test', 'test', 'nacos', 1592620383966, 1592620383966);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
